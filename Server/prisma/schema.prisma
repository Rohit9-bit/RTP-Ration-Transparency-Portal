generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model beneficiery {
  beneficiery_id     String              @id
  full_name          String
  email              String
  phone_no           String
  password           String
  family_size        Int
  state              String
  district           String
  address            String
  ration_card_no     String              @unique
  is_active          Boolean?            @default(true)
  security_PIN       Int
  createdAt          DateTime            @default(now())
  distributionCenter distribution_center @relation(fields: [centerId], references: [center_id])
  centerId           String
  quota              quota?
  transaction_log    transaction_log[]
  grieviance         grieviance[]
}

model shop_owner {
  manager_id          String               @id
  full_name           String
  email               String
  phone_no            String
  state               String
  district            String
  address             String
  owner_id            String
  password            String
  createdAt           DateTime             @default(now())
  distribution_center distribution_center?
}

model distribution_center {
  center_id         String              @id
  address           String
  center_name       String
  state             String
  district          String
  shopOwner         shop_owner          @relation(fields: [managerId], references: [manager_id])
  managerId         String              @unique
  beneficiery       beneficiery[]
  transaction_log   transaction_log[]
  shop_stock_ledger shop_stock_ledger[]
  grieviance        grieviance[]
}

model commodity {
  commodity_id    String            @id
  commodity_name  String
  unit            String
  createdAt       DateTime          @default(now())
  quota           quota             @relation(fields: [quotaId], references: [quota_id])
  quotaId         String            @unique
  transaction_log transaction_log[]
  shop_stock      shop_stock_ledger @relation(fields: [ledgerId], references: [ledger_id])
  ledgerId        String
}

model quota {
  quota_id           String      @id
  month_year         DateTime    @default(now())
  quantity_entitled  Float
  quantity_remaining Float
  beneficiery        beneficiery @relation(fields: [beneficieryId], references: [beneficiery_id])
  beneficieryId      String      @unique
  commodity          commodity[]
}

model transaction_log {
  transaction_id             String              @id
  quantity_entitled          Float
  quantity_received          Float
  is_verified_by_beneficiery Boolean
  anomaly_type               String[]            @default(["T_hour", "Q_var"])
  beneficiery                beneficiery         @relation(fields: [beneficieryId], references: [beneficiery_id])
  beneficieryId              String
  distributionCenter         distribution_center @relation(fields: [centerId], references: [center_id])
  centerId                   String
  commodity                  commodity           @relation(fields: [commodityId], references: [commodity_id])
  commodityId                String
  createdAt                  DateTime            @default(now())
  updatedAt                  DateTime            @default(now())
}

model shop_stock_ledger {
  ledger_id          String              @id
  stock_in_quantity  Float
  stock_out_quantity Float
  distributionCenter distribution_center @relation(fields: [centerId], references: [center_id])
  centerId           String
  createdAt          DateTime            @default(now())
  commodity          commodity[]
}

model grieviance {
  grieviance_id      String              @id
  issue_type         String
  description        String
  status             String[]            @default(["New", "In Review", "Closed"])
  distributionCenter distribution_center @relation(fields: [centerId], references: [center_id])
  centerId           String
  beneficiery        beneficiery         @relation(fields: [beneficieryId], references: [beneficiery_id])
  beneficieryId      String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @default(now())
}
